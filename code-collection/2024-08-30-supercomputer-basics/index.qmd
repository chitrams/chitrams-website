---
title: "Basics of high-performance computing systems"
description: "How to orient yourself if you have never used a supercomputer."
author: ''
date: '2024-08-30'
categories: 
  - computer science
draft: yes
---

I'm currently learning how to run an R workflow on a supercomputer. I've never used a supercomputer before. It's been quite the journey and I thought I'd compile this list of resources so that anyone else who needs to start learning how to use supercomputers can have a friendly guide to help them start and get going. 

The best way to understand how supercomputers work is to understand how computers work to begin with, including computer architecture and computer networks. I'll write separate posts on these topics and link them here.

In this post I will refer to this use of supercomputers as high-performance computing (HPC). 
These terms ("supercomputing" and "HPC") are often used interchangeably but I would like to make a distinction here, in the context of advanced computing.
Supercomputers are only a subset of HPCs. HPC is a broader term that encompasses the use of supercomputers and other powerful computing resources to solve advanced computational problems. 

But if you're short on time, here are some of the most important concepts.

# HPC concepts

Here are the concepts that I found most important in understanding how to use a HPC. 

- Basic skills in using the Linux command line and a text editor such as Vim. 
- Understanding the HPC components such as login nodes, compute nodes, and data nodes.
- Understanding the job scheduling system, such as Slurm.
- A basic understanding of computer architecture.
- A basic understanding of networking concepts. 

Let's break them down one by one. 

## Linux command line and text editor skills

A basic understanding of how to use the Linux command line is useful as you'll mostly be on the command line. Then you want to be able to use text editors like Vim or Nano to edit scripts and configuration files.

Here are the resources I found useful for quickly learning Vim:
- A quick introduction to what's going on when you really have no clue: [this guide](https://linuxhandbook.com/basic-vim-commands/) from the Linux Handbook.
- An interactive tutorial for learning Vim: [OpenVim](https://www.openvim.com/). I liked this because it allows you to actually see what happens on the screen as you're typing things out. 
- Otherwise you could try out the built-in `vimtutor` by typing in `vimtutor` in your terminal (assuming Vim is already installed on your device).
- For information on how to do more advanced things in Vim, [this guide](https://learnvim.irian.to/) is pretty good.

## HPC components

## Job scheduling system (Slurm)

Slurm is the most widely used job scheduling system for HPC clusters, but there are other job schedulers used too. Familiarise yourself with them.

I found [this](https://slurm.schedmd.com/quickstart.html) to be a good guide to Slurm.

## Computer architecture

Specifically, I would want to know how the processors, memory, and storage components

## Networking concepts

Specifically, a basic understanding of how to use SSH for secure remote access and data transfer.

# Additional concepts

## File transfer tools

Tools such as scp, sftp, or rsync for transferring data into and out of the HPC system.

## Scripting skills

## Resource management

# Good starting points

If this is overwhelming: I get it! I only compiled this list after a month of working on it.

What you could do is go to your supercomputer's help page and see if they have user documentation that you can use. Pawsey, the supercomputing research centre that I use, has an excellent and comprehensive [user support documentation](https://pawsey.atlassian.net/wiki/spaces/US/overview), a Supercomputing User Training [playlist](https://www.youtube.com/playlist?list=PLmu61dgAX-aYlqIy2VgH8s8UD2oUIA3KS), and a support team who's there to ensure that we use the resources well as we are partnered with a university.